<?xml version="1.0" encoding="UTF-8" ?>
<!-- OpenSKOS @ Solr 7.4.0 -->
<config>
  <luceneMatchVersion>7.1.0</luceneMatchVersion>

  <!-- set this via the core's properties file -->
  <dataDir>${solr.core.data.dir:}</dataDir>

  <indexConfig>
    <useCompoundFile>false</useCompoundFile>
    <!--
    <mergeFactor>100</mergeFactor>
    <maxMergeDocs>2147483647</maxMergeDocs>
    -->
    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->
    <ramBufferSizeMB>128</ramBufferSizeMB>
    <mergePolicyFactory class="org.apache.solr.index.TieredMergePolicyFactory">
        <int name="maxMergeAtOnce">10</int>
        <int name="segmentsPerTier">20</int>
    </mergePolicyFactory>
    <maxFieldLength>10000</maxFieldLength>
    <writeLockTimeout>1000</writeLockTimeout>
    <commitLockTimeout>10000</commitLockTimeout>
    <lockType>simple</lockType>
  </indexConfig>

  <updateHandler class="solr.DirectUpdateHandler2">

    <updateLog>
        <str name="dir">${solr.core0.data.dir:}</str>
    </updateLog>
          
    <!-- Limit the number of deletions Solr will buffer during doc updating.
        Setting this lower can help bound memory use during indexing.
    -->
    <maxPendingDeletes>100000</maxPendingDeletes>

    <!-- autocommit pending docs if certain criteria are met.  Future versions may expand the available
     criteria -->
    <autoCommit>
      <maxDocs>10000</maxDocs> <!-- maximum uncommited docs before autocommit triggered -->
      <maxTime>60000</maxTime> <!-- maximum time (in MS) after adding a doc before an autocommit is triggered -->
      <openSearcher>false</openSearcher> <!-- SOLR 4.0.  Optionally don't open a searcher on hard commit.  This is useful to minimize the size of transaction logs that keep track of uncommitted updates. -->
    </autoCommit> 
      
    <!-- SoftAutoCommit

         Perform a 'soft' commit automatically under certain conditions.
         This commit avoids ensuring that data is synched to disk.

         maxDocs - Maximum number of documents to add since the last
                   soft commit before automaticly triggering a new soft commit.

         maxTime - Maximum amount of time in ms that is allowed to pass
                   since a document was added before automaticly
                   triggering a new soft commit.
      -->
    <autoSoftCommit>
        <maxTime>60000</maxTime>
    </autoSoftCommit>         
  </updateHandler>

    <!-- Search Components
        Search components are registered to SolrCore and used by
        instances of SearchHandler (which can access them by name)

        By default, the following components are available:

        <searchComponent name="query"     class="solr.QueryComponent" />
        <searchComponent name="facet"     class="solr.FacetComponent" />
        <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
        <searchComponent name="highlight" class="solr.HighlightComponent" />
        <searchComponent name="stats"     class="solr.StatsComponent" />
        <searchComponent name="debug"     class="solr.DebugComponent" />

        Default configuration in a requestHandler would look like:

        <arr name="components">
          <str>query</str>
          <str>facet</str>
          <str>mlt</str>
          <str>highlight</str>
          <str>stats</str>
          <str>debug</str>
        </arr>

        If you register a searchComponent to one of the standard names,
        that will be used instead of the default.

        To insert components before or after the 'standard' components, use:

        <arr name="first-components">
          <str>myFirstComponentName</str>
        </arr>

        <arr name="last-components">
          <str>myLastComponentName</str>
        </arr>

        NOTE: The component registered with the name "debug" will
        always be executed after the "last-components"
      -->

    <query>
          <maxBooleanClauses>1024</maxBooleanClauses>
          <filterCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0"/>
          <queryResultCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0"/>
          <documentCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0"/>
          <enableLazyFieldLoading>true</enableLazyFieldLoading>
          <queryResultWindowSize>10</queryResultWindowSize>
          <useColdSearcher>false</useColdSearcher>
          <maxWarmingSearchers>4</maxWarmingSearchers>
    </query>

    <requestDispatcher handleSelect="false" >
      <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
    </requestDispatcher>
    
    <!-- query existing fields -->
    <requestHandler name="/luke" class="org.apache.solr.handler.admin.LukeRequestHandler" />
    
    <!-- perform query analysis -->
    <requestHandler name="/analysis/field" class="solr.FieldAnalysisRequestHandler" />
    
    <!-- SearchHandler
         http://wiki.apache.org/solr/SearchHandler

       For processing Search Queries, the primary Request Handler
       provided with Solr is "SearchHandler" It delegates to a sequent
       of SearchComponents (see below) and supports distributed
       queries across multiple shards
    -->
   <requestHandler name="/select" class="solr.SearchHandler">
        <!-- default values for query parameters can be specified, these
             will be overridden by parameters in the request
          -->
        <lst name="defaults">
            <str name="echoParams">explicit</str>
            <int name="rows">100</int>
            <str name="df">search</str>
            <str name="wt">json</str>
            <str name="indent">false</str>
        </lst>
    </requestHandler>
       
    <requestHandler name="/luke" class="org.apache.solr.handler.admin.LukeRequestHandler" />

    <requestHandler name="standard" class="solr.StandardRequestHandler">
        <lst name="defaults">
            <str name="echoParams">explicit</str>
        </lst>
    </requestHandler>

    <requestHandler name="/update" class="solr.UpdateRequestHandler" />
    <requestHandler name="/update/json" class="solr.UpdateRequestHandler">
        <lst name="defaults">
            <str name="stream.contentType">application/json</str>
        </lst>
    </requestHandler>

    <requestHandler name="/admin/ping" class="PingRequestHandler">
        <lst name="defaults">
            <str name="qt">standard</str>
            <str name="q">solrpingquery</str>
            <str name="echoParams">all</str>
        </lst>
    </requestHandler>

    <queryResponseWriter name="standard" class="org.apache.solr.response.XMLResponseWriter"/>
    <queryResponseWriter name="json" class="org.apache.solr.response.JSONResponseWriter"/>
    <queryResponseWriter name="php" class="org.apache.solr.response.PHPResponseWriter"/>
    <queryResponseWriter name="phps" class="org.apache.solr.response.PHPSerializedResponseWriter"/>
    <queryResponseWriter name="xslt" class="org.apache.solr.response.XSLTResponseWriter">
        <int name="xsltCacheLifetimeSeconds">5</int>
    </queryResponseWriter>

    <admin>
        <defaultQuery>solr</defaultQuery>
        <!-- <healthcheck type="file">server-enabled</healthcheck> -->
    </admin>
</config>