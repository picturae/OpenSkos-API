openapi: 3.0.0
info:
  title      : "OpenSkos API"
  description: "TODO: DESCRIPTION"
  version    : "2.3"

servers:
  - url: "http://api.openskos.local"
    description: "Default local development server"

paths:
  /errors.{format}:
    get:
      summary: ""
  /relationtypes.{format}:
    get:
      summary: ""
  /relationtype/{id}.{format}:
    get:
      summary: ""
  /vocab.{format}:
    get:
      summary: ""
  /roles.{format}:
    get:
      summary: ""
  /concept/{id}.{format}:
    get:
      summary: ""
  /concept.{format}:
    get:
      summary: ""
  /concepts.{format}:
    get:
      summary: ""
  /autocomplete.{format}:
    get:
      summary: ""
  /labels.{format}:
    get:
      summary: ""
  /label/{id}.{format}:
    get:
      summary: ""
  /label.{format}:
    get:
      summary: ""
  /users.{format}:
    get:
      summary: ""
  /user/{id}.{format}:
    get:
      summary: ""
  /statuses.{format}:
    get:
      summary: ""
  /institutions.{format}:
    get:
      summary: ""
    post:
      summary: ""
    put:
      summary: ""
  /institution/{id}.{format}:
    get:
      summary: ""
    delete:
      summary: ""
  /prefixes.{format}:
    get:
      summary: ""
  /sets.{format}:
    get:
      summary: ""
    post:
      summary: ""
    put:
      summary: ""
  /set/{id}.{format}:
    get:
      summary: ""
    delete:
      summary: ""
  /relations.{format}:
    get:
      summary: ""
  /conceptschemes.{format}:
    get:
      summary: ""
    post:
      summary: ""
    put:
      summary: ""
  /conceptscheme/{id}.{format}:
    get:
      summary: ""
    delete:
      summary: ""
  /ping:
    get:
      summary: "Healthcheck end basic information"
      responses:
        '200':
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  name:
                    type: "string"
                    example: "openskos-api"
                    description: "Name of the whole api being called"
                  status:
                    type: "string"
                    example: "ok"
                    description: "Status of the api"
                  version:
                    type: "string"
                    example: "2.3"
                    description: "Version of the api"
                  license:
                    type: "string"
                    example: "MIT"
                    description: "License the api operates under"
                  copyright:
                    type: "object"
                    properties:
                      holder:
                        type: "string"
                        example: "Picturae"
                        description: "Holder of the copyright"
                      published:
                        type: "integer"
                        format: "int64"
                        description: "The year the copyright was published"
                      revised:
                        type: "integer"
                        format: "int64"
                        description: "The year the copyright was revised"
                    description: "Copyright information"
